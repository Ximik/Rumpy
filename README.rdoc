== Welcome to Rumpy

Rumpy is some kind of framework to make up your own jabber bot quickly.
It uses {ActiveRecord}[https://github.com/rails/rails/tree/master/activerecord] and {XMPP4R}[http://home.gna.org/xmpp4r/].

Our goal is 'DO NOT REINVENT THE WHEEL'.

== Features

* Forget about xmpp-related things. Just set your login & password.
* Forget about database-related things. Just set your database preferences.
* Write logic using ActiveRecord and callback functions.

== Getting started

* Rumpy uses 3 configs:
  database.yml  ::  Your bot's database preferences.
  lang.yml      ::  Your bot's responces. Append to existing keys more answers and use them like @lang['someanswer]. **There must be at least 3 keys : hello /used when somebody add bot/, stranger /when somebody trying talk to bot without authorization/, authorized /when bot get authorized/.
  xmpp.yml      ::  Your bot's account settings.
  Look at Examples section to see this configs.
* Implement your ActiveRecord models in one directory. You have to implement at least one model, for users.
* Prepare your database.
* Start writing your class:
  * Mix in Rumpy::Bot module:
    include Rumpy::Bot
  * Define some instance variables:
    @models_path  ::  Path to directory, containing all ruby files with models.
    @config_path  ::  Path to directory, containing all ruby config files
    @main_model   ::  Symbol, that stands for main model. If your main model is, e.g. User, set @main_model to :user
    @pid_file     ::  Optional variable, sets location of the file to which pid of detached process will be saved. If not set, it equals NameOfYourBotClass.downcase + '.pid'.
    @log_file     ::  Optional variable, sets location of the file for errors. Default is STDERR.
    @log_level    ::  Optional variable, sets the verbosity of log. Possible values are Logger::DEBUG < Logger::INFO < Logger::WARN < Logger::ERROR < Logger::FATAL < Logger::UNKNOWN. Default is Logger::INFO
    @logger       ::  If you wanna specify more parameters to logger, you always can create logger yourself. If this variable set, @log_file & @log_level are ignored.
    @bot_name     ::  Optional name of the bot. Default is name of bot's class.
    @bot_version  ::  Optional version of the bot. Default is 1.0.0.
  * Write 3 methods:
    backend_func() -> [[receiver, message]*] :: This optional method is running all the time in the loop. Returns array of pairs [receiver, message].
    parser_func(msg) -> pars_result :: This method parses any incoming message and returs results.
    do_func(usermodel, pars_results) -> msg :: This method uses results from parser_func, doing some stuff with model of user, from whom message was received. Returns message to be send to this user
* Run bot:
  You can run your bot without detaching:
    Rumpy.run YourBotClassName
  Or with detaching:
    #To start your bot:
    Rumpy.start YourBotClassName
    #To stop it:
    Rumpy.stop YourBotClassName

== Example

Look at {CuteBot}[https://github.com/MPogoda/CuteBot], {yatodo}[https://github.com/MPogoda/yatodo], {Noty}[https://github.com/Ximik/Noty].

Feel free to contact us about any questions related to Rumpy.

== License

Rumpy is released under the MIT license.
